# Description of what this change includes
# Revision number
# Date

AWSTemplateFormatVersion: '2010-09-09'
Description: "Creates a VPC named VPC-benjoh8156 with 3 public subnets across at least 3 AZs. Deploy this stack in region us-west-2."
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Configuration
        Parameters:
          - VpcCidr
          - PublicSubnetCidrs
    ParameterLabels:
      VpcCidr:
        default: VPC CIDR (e.g., 10.0.0.0/16)
      PublicSubnetCidrs:
        default: 3 Public Subnet CIDRs (comma-separated)

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '(\d{1,3}\.){3}\d{1,3}/\d{1,2}'
    Description: CIDR block for the VPC
  PublicSubnetCidrs:
    Type: List<String>
    Default: "10.0.0.0/24,10.0.1.0/24,10.0.2.0/24"
    Description: Three /24 CIDRs for public subnets

Rules:
  MustBeUsWest2:
    Assertions:
      - Assert: !Equals [ !Ref 'AWS::Region', 'us-west-2' ]
        AssertDescription: "This stack must be deployed in us-west-2."

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: VPC-benjoh8156

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: VPC-benjoh8156-igw

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: VPC-benjoh8156-public-rt

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [ 0, !Ref PublicSubnetCidrs ]
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: VPC-benjoh8156-public-a

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [ 1, !Ref PublicSubnetCidrs ]
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: VPC-benjoh8156-public-b

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [ 2, !Ref PublicSubnetCidrs ]
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: VPC-benjoh8156-public-c

  AssocSubnetAPublicRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  AssocSubnetBPublicRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  AssocSubnetCPublicRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: VPC-benjoh8156-VpcId
  PublicSubnetIds:
    Description: List of public subnet IDs (A,B,C)
    Value: !Join [ ",", [ !Ref PublicSubnetA, !Ref PublicSubnetB, !Ref PublicSubnetC ] ]